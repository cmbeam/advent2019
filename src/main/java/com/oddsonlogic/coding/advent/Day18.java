package com.oddsonlogic.coding.advent;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

public class Day18 {

    HashMap<String,String> keys = new HashMap<>();
    HashMap<String,String> doors = new HashMap<>();
    List<String> walls = new ArrayList<>();
    int height = 0;
    int width = 0;
    Coordinates start = new Coordinates();

    public static void main(String[] args) {
        String input = "#################################################################################\n" +
                "#.................C...#...#.......#.....#.#.........#.R.....#.....B............t#\n" +
                "#.###################.#.#.###.#.###.#.#V#.#.#####.#.#.#####.#.#####.###########.#\n" +
                "#...Z...#.......#.....#.#...#.#...#.#.#.#.#.#.#...#.#.#...#...#...#.#.....#.#...#\n" +
                "#.#####.#.#####.#.#####.###.#.###.#.#.###.#.#.#.#####.#.#.#####.#.#.#.###.#.#.###\n" +
                "#.#.....#k..#...#...#...#.#.#...#...#...#...#.#.......#.#.....#.#n#.....#.#...#.#\n" +
                "#.#.#.#####.#.#####.#.#.#.#.#.#########.#.###.#########.#.#####.#.#######.#.###.#\n" +
                "#.#.#.#.....#.#...F.#.#.#...#.#...#...#.#.#............m#.#.....#.......#.#.#...#\n" +
                "#.#.###.#####.#.#######.#.#####.#.#.#.#.#.#####.#####.#####.###########.#.#.#.#.#\n" +
                "#.#...#.#.....#...#.....#.......#.#.#.#.#.....#.#...#.#.....#.....#.......#.#.#.#\n" +
                "#.###.#.#.#######.#.#############.#.#.#.#####.#.#.#.###.#####.###.#########.#.#.#\n" +
                "#.#...#.#.......#.#...#...#.....#.#.#.#.#...#...#.#.#...#..q..#.#.#.....#.....#.#\n" +
                "#.#.###.#######.#.#.#.###.#.#.###.#.#.#.#.#.#.###.#.#.###.#####.#.#.###.#######.#\n" +
                "#.#...........#.#.#.#...#...#...#.#.#...#.#.#.#...#...#...#.....#...#.#w..#...#i#\n" +
                "#.###########.#.#.#####.#.#####.#.#.###U###.#.#.#######.###.#########.###.#.#.###\n" +
                "#...#.#.....#.#.#.......#.#...#.#.#...#.#...#.#.....#...#.........#.....#...#...#\n" +
                "###.#.#.###.#.#.#########.###.#.#.#.#.#.#.###.#####.#.#.#####.#.###.#.#########.#\n" +
                "#.#.#.#.#.#.#.#.#.......#.....#.#.#.#.#.#...#.#...#.#.#.#...#.#.#...#s......#...#\n" +
                "#.#.#.#.#.#.###.#####.#.#####.#.#.###.#.#.#.#.#.###.#.###.#.#.#.#.#######.###.###\n" +
                "#.....#.#.......#...#.#...#...#...#...#.#.#...#...#.#.....#.#.#...#..x..#....d#.#\n" +
                "#######.#########.#.#####.#.#######.###.#.#######.#.#######J###.###.###.#######.#\n" +
                "#.....#...#...#.S.#.#j..#...........#.#.#.#.......#.#.....#...#...#.#.#.#.#.....#\n" +
                "#.###.###.#.#.#.###.###.#############.#.#.#.#####.#.#.#.#########.#.#.#.#.#.#.#.#\n" +
                "#.#.....#.#.#.....#...#.......#.........#...#.....#...#.........#...#...#.#.#.#.#\n" +
                "#.#####.#.#.#######.#.#######.###.###########.###########.#.#########.###.#.#.###\n" +
                "#.#.E.#.#.#.#...#...#...#...#...#.....#.#.....#...........#.#.....#...#..e..#...#\n" +
                "#.#.#.#.#H#X#.#.#.#.#####W#.###Q#####.#.#.#####.###.#########.###.#.###########.#\n" +
                "#...#.#...#.#.#.#.#.#...#.#...#.#...#.#.#...#.#...#.#...#...#.#.#.#.............#\n" +
                "#####.#####.#.#.#.###.#.#.###.#.#.###.#.###.#.###.#.#.#.#.#.#.#.#.#############.#\n" +
                "#...#.#.....#.#.#...D.#...#.#.#.#.....#.#...#...#.#.#.#...#...#.#.#...........#.#\n" +
                "###.#.#.#####.#############.#.#.#.#####.#.#####.#.###.#########.#.#.###.#.#####.#\n" +
                "#...#...#..........o........#...#......g#.....#.#.....#...#.#...#.#.#.K.#.#....h#\n" +
                "#.#.#####.###########.#################.#####.#.#######.#.#.#.#.#.#.#.#####.#####\n" +
                "#.#.....#.#.....#...#.........#.......#.#.#...#.....#...#.#...#.#...#...#...#...#\n" +
                "#.#######.###.#.#.#.#######.#.#######.#.#.#.###.###.#.###.#####.#######.#.#####.#\n" +
                "#.#.....#...#.#...#...#...#.#.........#.#.#...#...#.#.#...........#.....#.....#.#\n" +
                "#.#.###.###.#.#######.#.###.#####.#####.#.###.#.#.#.#.###########.#.#########.#.#\n" +
                "#.#.#.#...#...#.#.....#...#.....#.#.....#.#...#.#.#.#...#.........#.#.........#.#\n" +
                "#.#.#.###.#####.#.#######.#####.###.#####.#.#####.#.###.#.#########.#.#########.#\n" +
                "#.......#.....................#...................#.....#.........#.............#\n" +
                "#######################################.@.#######################################\n" +
                "#.......#...........#.....#.....................#.....#.......#...........#.....#\n" +
                "#.#######.#.#######.#.###.#.#####.#####.#.#.#####.#.#.#######.#.#########.#####.#\n" +
                "#.#.......#.....#...#...#.#.#...#.....#.#.#.......#.#.........#.#.......#...#...#\n" +
                "#.#.###########.#.#####.###.#.#.#####.#.#.#####.###.###########.#.###.#.###.#.###\n" +
                "#b..#...........#.....#...#.#.#.#.#...#.#.#...#...#...#.........#.#...#.#...#...#\n" +
                "#.###.###############.###.#.#.#.#.#.###.###.#.#######.#.#########.#.#.###.#####.#\n" +
                "#...#...........#...#.#...#.#.#...#.#...#...#.......#.#.#.......#.#.#.#...#.....#\n" +
                "###.###########.###.#.#.#.#.#.###.#.###.#.#########.#.#.#.#####.###.#.#.###.###.#\n" +
                "#.............#...#.....#.#...#...#...#.#.#.#.....#.#.#.#.#...#.....#.#....l#...#\n" +
                "#.#########.#####.#####.#######.#####G#.#.#.#.#O###.#.#.#.#.#.#.#####.#######.###\n" +
                "#.#...#...#.#...#...#...#.....#...#...#.#.#.#.#...#...#.#.#.#.#.#.Y.#.......#.#.#\n" +
                "#.#.#.#.#.###.#.#.#.###.#.###.###.#.###.#.#.#.###.#.###.#.#.#.###.#.#######.#.#.#\n" +
                "#.#.#a..#.....#.#.#...#.#.#.#.....#.#.#.#.#.#...#...#...#.#.#.....#.....#...#.#.#\n" +
                "###.###########.#####.###.#.#####.#.#.#.#.#.###.#####.###.#.###########.#.###.#.#\n" +
                "#...#..y#.....#.#...#.......#...#.#.#...#.#.........#.#.......#.#.......#.#...#.#\n" +
                "#.###.#.#.#.#.#.#.#.#.#######.#.#.#.###.#.#.#########.#######.#.#.#######.#.###.#\n" +
                "#.....#.#.#.#.#...#.#.#.......#.#.#...#.#.#.#.......#.....#z#.#.#.#.....#.#p..#.#\n" +
                "#######.###.#######.#.#.#######.#####.###.###.#####.#####.#.#.#.#A#.###.#.###.#.#\n" +
                "#.....#.....#.....#.#.#.....#.......#...#...#...#.....#...#.....#.#...#.....#.#.#\n" +
                "#.###.#####.#.###.#.#######.#######.###.#.#.#.###.###.#.#######.#.#.#########.#.#\n" +
                "#...#.......#.#.#...#.....#...#...#...#.#.#...#...#...#.......#.#.#.#.........#.#\n" +
                "###.#########.#.#.#######.#.#.###.###.#.#.#####.###.###########.#.###.#########.#\n" +
                "#...#...#...P.#...#.......#.#...#.#...#.#.#.....#...#.......#.#.#.....#...#.....#\n" +
                "#.###.###.###.#####.#########.#.#.#.###.#.#.#######.#.#####.#.#.#######.#.#####.#\n" +
                "#.....#...#...#.....#.......#.#.#...#...#.#.......#...#...#...#.#.......#.......#\n" +
                "#####.#.###.###.#####.#####.###.###.#.#.#.#######.#####.#.###.#.###.###.#########\n" +
                "#...#c#...#.#...#.....#...#...#...#.#.#u#.#.....#.....#.#.....#...#...#.#.......#\n" +
                "###.#.###.###.###.#####.#####.###.#.#.#.#.#.###.#####.#.#########.###.#.#.#####.#\n" +
                "#...#...#.L.#.#.#...#.......#.#...#...#.#.#.#.#.#...#.#.....#...#.#...#.......#.#\n" +
                "#.#####.###.#.#.#.#.#.#####.#.#.#######.#.#.#.#.###.#.#####.#.#.#.#.#####.#####.#\n" +
                "#...#...#.#...#...#.#.....#.#.#.#.....#.#.#.#.#.....#...#...#.#...#.#...#.#...#.#\n" +
                "###.#.###.#########.###.###.#.#.#####.#.#.#.#.#####.###.#.###.#######.#.###.#.#.#\n" +
                "#...#...#.........#...#.#...#...#.....#.#...#.#...#.#.#.#.#...#.....#.#...N.#.#.#\n" +
                "#.#####.#.#####.#.###.#.#.#######.#####.#####.#.#.#.#.#.###.###.###.#.#######.#T#\n" +
                "#.I.#...#.#.....#.....#.#...#...#.......#.#.....#.#.#.#...#.#.....#...#...#...#.#\n" +
                "#.#.#.###.#.###############.#.#.#.#######.#.#####.#.#.###.#.#####.#####.#.#.###.#\n" +
                "#.#...#...#.#.....#.........#.#.#...#...#...#...#.#.#...#.#f......#.#...#.#.....#\n" +
                "#.#########.#.#####.###.#####.#.###.#.#.#.###.#.#.#.###.#.#########.#.#.#######.#\n" +
                "#...........#..r....M.#.......#v......#.#.....#.#.......#.............#.........#\n" +
                "#################################################################################";

        List<String> items = Arrays.asList(input.split("\n"));
        Day18 day18 = new Day18();
        day18.height = items.size();
        day18.width = items.get(0).length();
        System.out.println("width: "+day18.width+" Height: "+day18.height);



        //Parse maze
        int y = 0;
        for (String item: items) {
            for (int i = 0; i <day18.width ; i++) {
                Coordinates coordinate = new Coordinates();
                coordinate.x=i;
                coordinate.y=y;
                char waypoint = item.charAt(i);
                //lower case = key
                if(Character.isLowerCase(waypoint))
                    day18.keys.put(""+waypoint,coordinate.toString());
                //upper case = door
                else if(Character.isUpperCase(waypoint))
                    day18.doors.put(""+waypoint,coordinate.toString());
                //# = wall
                else if(waypoint=='#')
                    day18.walls.add(coordinate.toString());
                else if(waypoint=='@')
                    day18.start=coordinate;
            }
            y++;
        }

        //Print maze to verify
        day18.printMaze();

        int stepCounter = 0;

        //while doors exist
            //shortest distance to all accessible keys and accessible unlockable doors
            //go to closest key or door

        System.out.println();
        System.out.println();
        System.out.println("Steps: "+stepCounter);

    }
    public  void printMaze(){
        for (int i = 0; i <this.height ; i++) {
            for (int j = 0; j < this.width ; j++) {
                Coordinates coordinate = new Coordinates();
                coordinate.x=j;
                coordinate.y=i;
                if(walls.contains(coordinate.toString()))
                    System.out.print("#");
                else if(keys.containsValue(coordinate.toString()))
                    System.out.print("k");
                else if(doors.containsValue(coordinate.toString()))
                    System.out.print("D");
                else if(coordinate.x==start.x&&coordinate.y==start.y)
                    System.out.print("@");
                else
                    System.out.print(" ");
            }
            System.out.println();
        }
    }
}
